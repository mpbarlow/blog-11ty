@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: "InstrumentSerif";
  src: url("/font/InstrumentSerif-Regular.ttf");
}

@font-face {
  font-family: "MonaspaceNeon";
  src: url("/font/MonaspaceNeon-Regular.woff");
}

.header-background {
  @apply relative;
}

/*
 * Apply the offset grey background using a pseudo element. width: 100vw + left: 50% + margin-left: -50vw allows the 
 * full-width background to escape the width-constrained body, but still be horizontally centred.
 * - 1000px height is to cover any reasonable distance down the page we are likely to want to cover
 * - -0.44444em bottom  is because Tailwind Typography defines h1's bottom margin as 0.88888em, so we want half way.
 */
.header-background::after {
  @apply absolute bottom-[-0.44444em] left-[50%] -z-10 ml-[-50vw] h-[1000px] w-screen border-b-2 border-gray-200 bg-gray-100 content-[''] dark:border-gray-600 dark:bg-gray-700;
}

/*
 * On the home page, on sm+ displays, the heading we want to give the background to isn't horizontally centered; it's
 * 3/4 of the content width minus spacing.4, so our "push by 50%, pull by 50vw" trick doesn't work.
 * 
 * Instead, to push the background to the exact midpoint (so our -50vw works), we want 1/3 of the 3/4 width (i.e. 1/4
 * of the content width), but then we've overshot because of the spacing and need to pull back by 3/4 of spacing.4,
 * which is spacing.3.
 * 
 * I fucking hate CSS.
 */
@media screen(sm) {
  .header-background-nudge::after {
    left: calc((100% / 3) - theme("spacing.3"));
  }
}

.footer-background {
  @apply relative;
}

/*
 * Basically the same thing but for the footer. The footer is always fixed height so we can just use the actual height
 * we need here, rather than 1000px like the header.
 */
.footer-background::after {
  @apply absolute inset-x-0 bottom-0 left-[50%] -z-10 ml-[-50vw] h-[110px] w-screen border-t-2 border-gray-200 bg-gray-100 content-[''] dark:border-gray-600 dark:bg-gray-700;
}
